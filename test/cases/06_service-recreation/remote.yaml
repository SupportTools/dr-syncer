---
apiVersion: v1
kind: Namespace
metadata:
  name: dr-sync-test-case06
  labels:
    dr-syncer.io/test-case: "06"
    dr-syncer.io/test-name: "service-recreation"
    dr-syncer.io/test: "true"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: test-configmap
  namespace: dr-sync-test-case06
  labels:
    app: test-app
    test-type: service-recreation
data:
  app.properties: |
    service.port=8080
    service.protocol=http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-deployment
  namespace: dr-sync-test-case06
  labels:
    app: test-app
    test-type: service-recreation
spec:
  replicas: 3
  selector:
    matchLabels:
      app: test-app
  template:
    metadata:
      labels:
        app: test-app
    spec:
      containers:
        - name: nginx
          image: nginx:latest
          ports:
            - containerPort: 80
              name: http
            - containerPort: 443
              name: https
            - containerPort: 8080
              name: metrics
---
apiVersion: v1
kind: Service
metadata:
  name: test-service-clusterip
  namespace: dr-sync-test-case06
  labels:
    app: test-app
    test-type: service-recreation
    service-type: clusterip
  annotations:
    description: "Test ClusterIP service"
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
spec:
  type: ClusterIP
  selector:
    app: test-app
  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP
    - name: https
      port: 443
      targetPort: https
      protocol: TCP
    - name: metrics
      port: 8080
      targetPort: metrics
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: test-service-nodeport
  namespace: dr-sync-test-case06
  labels:
    app: test-app
    test-type: service-recreation
    service-type: nodeport
  annotations:
    description: "Test NodePort service"
spec:
  type: NodePort
  selector:
    app: test-app
  ports:
    - name: http
      port: 80
      targetPort: http
      nodePort: 30080
      protocol: TCP
    - name: https
      port: 443
      targetPort: https
      nodePort: 30443
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: test-service-loadbalancer
  namespace: dr-sync-test-case06
  labels:
    app: test-app
    test-type: service-recreation
    service-type: loadbalancer
  annotations:
    description: "Test LoadBalancer service"
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-internal: "true"
spec:
  type: LoadBalancer
  selector:
    app: test-app
  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP
    - name: https
      port: 443
      targetPort: https
      protocol: TCP
  loadBalancerSourceRanges:
    - "10.0.0.0/8"
    - "172.16.0.0/12"
    - "192.168.0.0/16"
---
apiVersion: v1
kind: Service
metadata:
  name: test-service-headless
  namespace: dr-sync-test-case06
  labels:
    app: test-app
    test-type: service-recreation
    service-type: headless
  annotations:
    description: "Test Headless service"
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  type: ClusterIP
  clusterIP: None  # Makes this a headless service
  selector:
    app: test-app
  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP
    - name: https
      port: 443
      targetPort: https
      protocol: TCP
  publishNotReadyAddresses: true
