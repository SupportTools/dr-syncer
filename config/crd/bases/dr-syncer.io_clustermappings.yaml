---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: clustermappings.dr-syncer.io
spec:
  group: dr-syncer.io
  names:
    kind: ClusterMapping
    listKind: ClusterMappingList
    plural: clustermappings
    shortNames:
    - cm
    singular: clustermapping
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.sourceCluster
      name: Source Cluster
      type: string
    - jsonPath: .spec.targetCluster
      name: Target Cluster
      type: string
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .status.connectionStatus.connectedAgents
      name: Connected Agents
      type: string
    - jsonPath: .status.lastVerified
      name: Last Verified
      type: date
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ClusterMappingSpec defines the desired state of ClusterMapping
            properties:
              connectivityTimeoutSeconds:
                default: 60
                description: ConnectivityTimeoutSeconds is the timeout in seconds
                  for connectivity verification
                format: int32
                type: integer
              sourceCluster:
                description: SourceCluster is the name of the source cluster
                type: string
              sshKeySecretRef:
                description: SSHKeySecretRef references a secret containing SSH keys
                  for connectivity
                properties:
                  name:
                    description: Name is the name of the secret
                    type: string
                  namespace:
                    description: Namespace is the namespace of the secret
                    type: string
                  privateKeyKey:
                    default: id_rsa
                    description: PrivateKeyKey is the key in the secret for the private
                      key
                    type: string
                  publicKeyKey:
                    default: id_rsa.pub
                    description: PublicKeyKey is the key in the secret for the public
                      key
                    type: string
                required:
                - name
                type: object
              targetCluster:
                description: TargetCluster is the name of the target cluster
                type: string
              verifyConnectivity:
                default: true
                description: VerifyConnectivity determines whether to verify SSH connectivity
                  between agents
                type: boolean
            required:
            - sourceCluster
            - targetCluster
            type: object
          status:
            description: ClusterMappingStatus defines the observed state of ClusterMapping
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of the mapping's state
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              connectionStatus:
                description: ConnectionStatus provides information about agent connectivity
                properties:
                  connectedAgents:
                    description: ConnectedAgents is the number of successfully connected
                      agents
                    format: int32
                    type: integer
                  connectionDetails:
                    description: ConnectionDetails provides detailed connection information
                      for each agent
                    items:
                      description: AgentConnectionDetail provides connection details
                        for a specific agent
                      properties:
                        connected:
                          description: Connected indicates whether the connection
                            was successful
                          type: boolean
                        error:
                          description: Error provides error information if the connection
                            failed
                          type: string
                        sourceNode:
                          description: SourceNode is the name of the source node
                          type: string
                        targetNode:
                          description: TargetNode is the name of the target node
                          type: string
                      required:
                      - connected
                      - sourceNode
                      - targetNode
                      type: object
                    type: array
                  totalSourceAgents:
                    description: TotalSourceAgents is the total number of agents in
                      the source cluster
                    format: int32
                    type: integer
                  totalTargetAgents:
                    description: TotalTargetAgents is the total number of agents in
                      the target cluster
                    format: int32
                    type: integer
                required:
                - connectedAgents
                - totalSourceAgents
                - totalTargetAgents
                type: object
              consecutiveFailures:
                default: 0
                description: ConsecutiveFailures tracks the number of consecutive
                  reconciliation failures
                type: integer
              lastAttemptTime:
                description: LastAttemptTime is when the last reconciliation attempt
                  was made
                format: date-time
                type: string
              lastVerified:
                description: LastVerified is when connectivity was last verified
                format: date-time
                type: string
              message:
                description: Message provides additional status information
                type: string
              phase:
                description: Phase represents the current phase of the cluster mapping
                enum:
                - Pending
                - Connecting
                - Connected
                - Failed
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
