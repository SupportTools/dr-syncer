---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: replications.dr-syncer.io
spec:
  group: dr-syncer.io
  names:
    kind: Replication
    listKind: ReplicationList
    plural: replications
    singular: replication
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.sourceNamespace
      name: Source
      type: string
    - jsonPath: .spec.destinationNamespace
      name: Destination
      type: string
    - jsonPath: .spec.sourceCluster
      name: Source Cluster
      type: string
    - jsonPath: .spec.destinationCluster
      name: Destination Cluster
      type: string
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .status.syncStats.successfulSyncs
      name: Synced
      type: integer
    - jsonPath: .status.syncStats.failedSyncs
      name: Failed
      type: integer
    - jsonPath: .status.lastSyncTime
      name: Last Sync
      type: string
    - jsonPath: .status.nextSyncTime
      name: Next Sync
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              continuous:
                description: Continuous configuration for continuous replication mode
                properties:
                  backgroundSyncInterval:
                    default: 1h
                    description: BackgroundSyncInterval defines the interval for full
                      sync
                    pattern: ^([0-9]+h)?([0-9]+m)?([0-9]+s)?$
                    type: string
                  watchResources:
                    default: true
                    description: WatchResources enables real-time resource watching
                    type: boolean
                type: object
              destinationCluster:
                description: DestinationCluster is the name of the destination cluster
                type: string
              destinationNamespace:
                description: DestinationNamespace is the namespace to replicate to
                type: string
              failureHandling:
                description: FailureHandling defines how different types of failures
                  are handled
                properties:
                  defaultMode:
                    default: RetryAndWait
                    description: DefaultMode determines how failures are handled by
                      default
                    enum:
                    - RetryAndWait
                    - RetryOnly
                    - WaitForNextSync
                    - FailFast
                    type: string
                  networkError:
                    default: RetryAndWait
                    description: NetworkError determines how to handle network/connectivity
                      issues
                    enum:
                    - RetryAndWait
                    - RetryOnly
                    - WaitForNextSync
                    - FailFast
                    type: string
                  resourceNotFound:
                    default: FailFast
                    description: ResourceNotFound determines how to handle missing
                      resource types
                    enum:
                    - RetryAndWait
                    - RetryOnly
                    - WaitForNextSync
                    - FailFast
                    type: string
                  storageClassNotFound:
                    default: WaitForNextSync
                    description: StorageClassNotFound determines how to handle missing
                      storage classes
                    enum:
                    - RetryAndWait
                    - RetryOnly
                    - WaitForNextSync
                    - FailFast
                    type: string
                  validationFailure:
                    default: FailFast
                    description: ValidationFailure determines how to handle resource
                      validation failures
                    enum:
                    - RetryAndWait
                    - RetryOnly
                    - WaitForNextSync
                    - FailFast
                    type: string
                type: object
              immutableResourceConfig:
                description: ImmutableResourceConfig defines how to handle immutable
                  resources
                properties:
                  defaultHandling:
                    default: NoChange
                    description: DefaultHandling determines how immutable resources
                      are handled by default
                    enum:
                    - NoChange
                    - Recreate
                    - RecreateWithPodDrain
                    - PartialUpdate
                    - ForceUpdate
                    type: string
                  drainTimeout:
                    default: 5m
                    description: DrainTimeout specifies how long to wait for pod draining
                      when using RecreateWithPodDrain
                    type: string
                  forceDeleteTimeout:
                    default: 2m
                    description: ForceDeleteTimeout specifies how long to wait for
                      force deletion to complete
                    type: string
                  resourceOverrides:
                    additionalProperties:
                      description: ImmutableResourceHandling defines how to handle
                        immutable resources
                      enum:
                      - NoChange
                      - Recreate
                      - RecreateWithPodDrain
                      - PartialUpdate
                      - ForceUpdate
                      type: string
                    description: |-
                      ResourceOverrides allows specifying handling for specific resource types
                      Format: "resource.group" (e.g. "statefulsets.apps")
                    type: object
                type: object
              ingressConfig:
                description: IngressConfig defines configuration for ingress replication
                properties:
                  preserveAnnotations:
                    default: true
                    description: PreserveAnnotations determines whether to maintain
                      all ingress annotations
                    type: boolean
                  preserveBackends:
                    default: true
                    description: PreserveBackends determines whether to preserve backend
                      service references
                    type: boolean
                  preserveTLS:
                    default: true
                    description: PreserveTLS determines whether to maintain TLS configurations
                    type: boolean
                type: object
              namespaceConfig:
                description: NamespaceConfig defines configuration for namespace handling
                properties:
                  createNamespace:
                    default: true
                    description: CreateNamespace determines whether to create destination
                      namespace if it doesn't exist
                    type: boolean
                  preserveAnnotations:
                    default: true
                    description: PreserveAnnotations determines whether to maintain
                      namespace annotations
                    type: boolean
                  preserveLabels:
                    default: true
                    description: PreserveLabels determines whether to maintain namespace
                      labels
                    type: boolean
                type: object
              namespaceScopedResources:
                description: |-
                  NamespaceScopedResources is a list of namespace scoped resources to replicate
                  Format: "resource.group" (e.g. "widgets.example.com")
                items:
                  type: string
                type: array
              pvcConfig:
                description: PVCConfig defines configuration for PVC replication
                properties:
                  accessModeMappings:
                    description: |-
                      AccessModeMappings defines mappings to convert access modes between clusters.
                      This allows using different access modes in the destination cluster.
                      If a mapping is not found, the original access mode will be used.
                      This can be overridden per-PVC using the 'dr-syncer.io/access-mode' label.
                    items:
                      description: AccessModeMapping defines a mapping between source
                        and destination access modes
                      properties:
                        from:
                          description: From is the source cluster access mode
                          type: string
                        to:
                          description: To is the destination cluster access mode
                          type: string
                      required:
                      - from
                      - to
                      type: object
                    type: array
                  preserveVolumeAttributes:
                    default: false
                    description: |-
                      PreserveVolumeAttributes determines whether to preserve volume attributes when creating new PVs.
                      When true, volume attributes like filesystem type, mount options, etc. will be preserved.
                      When false (default), the storage class defaults will be used.
                    type: boolean
                  storageClassMappings:
                    description: |-
                      StorageClassMappings defines mappings to convert storage classes between clusters.
                      This allows using different storage classes in the destination cluster.
                      If a mapping is not found, the original storage class name will be used.
                      This can be overridden per-PVC using the 'dr-syncer.io/storage-class' label.
                    items:
                      description: StorageClassMapping defines a mapping between source
                        and destination storage classes
                      properties:
                        from:
                          description: From is the source cluster storage class name
                          type: string
                        to:
                          description: To is the destination cluster storage class
                            name
                          type: string
                      required:
                      - from
                      - to
                      type: object
                    type: array
                  syncPersistentVolumes:
                    default: false
                    description: |-
                      SyncPersistentVolumes determines whether to sync PVs when StorageClass supports multi-cluster attachment.
                      When true, the PV will be synced to the destination cluster.
                      When false (default), a new PV will be created by the storage provisioner.
                      This can be overridden per-PVC using the 'dr-syncer.io/sync-pv' label.
                    type: boolean
                type: object
              replicationMode:
                default: Scheduled
                description: ReplicationMode defines how replication should be performed
                enum:
                - Scheduled
                - Continuous
                - Manual
                type: string
              resourceTypes:
                description: ResourceTypes is the list of resource types to replicate
                items:
                  type: string
                type: array
              retryConfig:
                description: RetryConfig defines retry behavior for failed operations
                properties:
                  backoffMultiplier:
                    default: 200
                    description: BackoffMultiplier is the multiplier for backoff duration
                      after each failure (as percentage)
                    format: int32
                    maximum: 1000
                    minimum: 100
                    type: integer
                  initialBackoff:
                    default: 5s
                    description: InitialBackoff is the initial backoff duration after
                      first failure
                    pattern: ^([0-9]+h)?([0-9]+m)?([0-9]+s)?$
                    type: string
                  maxBackoff:
                    default: 5m
                    description: MaxBackoff is the maximum backoff duration
                    pattern: ^([0-9]+h)?([0-9]+m)?([0-9]+s)?$
                    type: string
                  maxRetries:
                    default: 5
                    description: MaxRetries is the maximum number of retries before
                      giving up
                    format: int32
                    type: integer
                type: object
              scaleToZero:
                default: true
                description: ScaleToZero determines whether deployments should be
                  scaled to zero replicas in the destination cluster
                type: boolean
              schedule:
                description: Schedule is the crontab schedule for replication
                pattern: ^(\*|([0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9])|\*/[0-9]+|\*\/[1-5][0-9])\s+(\*|([0-9]|1[0-9]|2[0-3])|\*/[0-9]+)\s+(\*|([1-9]|1[0-9]|2[0-9]|3[0-1])|\*/[0-9]+)\s+(\*|([1-9]|1[0-2])|\*/[0-9]+)\s+(\*|([0-6])|\*/[0-9]+)$
                type: string
              sourceCluster:
                description: SourceCluster is the name of the source cluster
                type: string
              sourceNamespace:
                description: SourceNamespace is the namespace to replicate from
                type: string
              syncCRDs:
                default: false
                description: |-
                  SyncCRDs determines whether to sync Custom Resource Definitions
                  When true, CRDs will be synced along with other resources
                  When false (default), CRDs will be skipped
                type: boolean
            required:
            - destinationCluster
            - destinationNamespace
            - sourceCluster
            - sourceNamespace
            type: object
          status:
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of the replication's state
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              deploymentScales:
                description: DeploymentScales stores the original scale values of
                  deployments
                items:
                  description: DeploymentScale stores information about a deployment's
                    scale
                  properties:
                    lastSyncedAt:
                      description: LastSyncedAt is when the scale was last synced
                      format: date-time
                      type: string
                    name:
                      description: Name is the name of the deployment
                      type: string
                    originalReplicas:
                      description: OriginalReplicas is the number of replicas in the
                        source cluster
                      format: int32
                      type: integer
                  required:
                  - name
                  - originalReplicas
                  type: object
                type: array
              detailedStatus:
                description: DetailedStatus provides detailed status for specific
                  resources
                items:
                  description: DetailedResourceStatus provides detailed status for
                    a specific resource
                  properties:
                    dependencies:
                      description: Dependencies tracks the status of resource dependencies
                      items:
                        description: ResourceDependency tracks dependency information
                        properties:
                          kind:
                            description: Kind of the dependent resource
                            type: string
                          name:
                            description: Name of the dependent resource
                            type: string
                          status:
                            description: Status of the dependency
                            enum:
                            - Pending
                            - InProgress
                            - Synced
                            - Failed
                            type: string
                        required:
                        - kind
                        - name
                        - status
                        type: object
                      type: array
                    lastAttempt:
                      description: LastAttempt contains information about the last
                        sync attempt
                      properties:
                        result:
                          description: Result of the attempt
                          enum:
                          - Success
                          - Failed
                          - Skipped
                          - Retrying
                          type: string
                        time:
                          description: Time of the attempt
                          format: date-time
                          type: string
                      required:
                      - result
                      - time
                      type: object
                    name:
                      description: Name of the resource
                      type: string
                    syncState:
                      description: SyncState represents the current state of sync
                        (Pending, InProgress, Synced, Failed)
                      enum:
                      - Pending
                      - InProgress
                      - Synced
                      - Failed
                      type: string
                    version:
                      description: Version of the resource
                      type: string
                  required:
                  - name
                  - syncState
                  - version
                  type: object
                type: array
              errorCategories:
                description: ErrorCategories tracks errors by category
                items:
                  description: ErrorCategory tracks errors by category
                  properties:
                    category:
                      description: Category of the error
                      minLength: 1
                      type: string
                    count:
                      description: Count of errors in this category
                      format: int32
                      minimum: 0
                      type: integer
                    lastOccurred:
                      description: LastOccurred is when the error last happened
                      format: date-time
                      type: string
                  required:
                  - category
                  - count
                  - lastOccurred
                  type: object
                type: array
              lastError:
                description: LastError contains details about the last error encountered
                properties:
                  message:
                    description: Message is the error message
                    type: string
                  resource:
                    description: Resource that caused the error (if applicable)
                    type: string
                  time:
                    description: Time when the error occurred
                    format: date-time
                    type: string
                required:
                - message
                - time
                type: object
              lastSyncTime:
                description: LastSyncTime is the last time the replication was synced
                format: date-time
                type: string
              lastWatchEvent:
                description: LastWatchEvent is the last time a watch event was processed
                  (Continuous mode only)
                format: date-time
                type: string
              nextSyncTime:
                description: NextSyncTime is the next scheduled sync time (Scheduled
                  mode only)
                format: date-time
                type: string
              phase:
                description: Phase represents the current phase of the replication
                enum:
                - Pending
                - Running
                - Completed
                - Failed
                type: string
              resourceGroups:
                description: ResourceGroups provides status information grouped by
                  resource type
                items:
                  description: ResourceGroupStatus provides status information for
                    a group of resources
                  properties:
                    failedCount:
                      description: FailedCount is the number of resources that failed
                        to sync
                      format: int32
                      minimum: 0
                      type: integer
                    groupKind:
                      description: GroupKind is the group/kind of the resources (e.g.
                        "apps/Deployment")
                      type: string
                    pendingCount:
                      description: PendingCount is the number of resources waiting
                        to be synced
                      format: int32
                      minimum: 0
                      type: integer
                    syncedCount:
                      description: SyncedCount is the number of successfully synced
                        resources
                      format: int32
                      minimum: 0
                      type: integer
                    totalCount:
                      description: TotalCount is the total number of resources in
                        this group
                      format: int32
                      minimum: 0
                      type: integer
                  required:
                  - failedCount
                  - groupKind
                  - pendingCount
                  - syncedCount
                  - totalCount
                  type: object
                type: array
              resourceStatus:
                description: ResourceStatus tracks the sync status of individual resources
                items:
                  description: ResourceStatus tracks the sync status of individual
                    resources
                  properties:
                    error:
                      description: Error message if sync failed
                      type: string
                    kind:
                      description: Kind of the resource
                      type: string
                    lastSyncTime:
                      description: LastSyncTime is the time of last sync attempt
                      format: date-time
                      type: string
                    name:
                      description: Name of the resource
                      type: string
                    namespace:
                      description: Namespace of the resource
                      type: string
                    status:
                      description: Status of the sync operation
                      enum:
                      - Pending
                      - InProgress
                      - Synced
                      - Failed
                      type: string
                  required:
                  - kind
                  - name
                  - status
                  type: object
                type: array
              retryStatus:
                description: RetryStatus tracks retry information for failed operations
                properties:
                  backoffDuration:
                    description: BackoffDuration is the current backoff duration
                    pattern: ^([0-9]+h)?([0-9]+m)?([0-9]+s)?$
                    type: string
                  nextRetryTime:
                    description: NextRetryTime is when the next retry will occur
                    format: date-time
                    type: string
                  retriesRemaining:
                    description: RetriesRemaining is the number of retries left
                    format: int32
                    minimum: 0
                    type: integer
                required:
                - backoffDuration
                - retriesRemaining
                type: object
              syncProgress:
                description: SyncProgress tracks the current progress of the sync
                  operation
                properties:
                  currentOperation:
                    description: CurrentOperation describes the current sync operation
                      being performed
                    type: string
                  estimatedTimeRemaining:
                    description: EstimatedTimeRemaining is the estimated time until
                      sync completion
                    pattern: ^([0-9]+h)?([0-9]+m)?([0-9]+s)?$
                    type: string
                  percentComplete:
                    description: PercentComplete indicates the percentage of completion
                      for the current sync
                    format: int32
                    maximum: 100
                    minimum: 0
                    type: integer
                  resourcesRemaining:
                    description: ResourcesRemaining is the count of resources still
                      pending sync
                    format: int32
                    minimum: 0
                    type: integer
                required:
                - percentComplete
                type: object
              syncStats:
                description: SyncStats provides statistics about the last sync operation
                properties:
                  failedSyncs:
                    description: FailedSyncs is the number of resources that failed
                      to sync
                    format: int32
                    minimum: 0
                    type: integer
                  lastSyncDuration:
                    description: LastSyncDuration is the duration of the last sync
                      operation
                    pattern: ^([0-9]+h)?([0-9]+m)?([0-9]+s)?$
                    type: string
                  successfulSyncs:
                    description: SuccessfulSyncs is the number of resources successfully
                      synced
                    format: int32
                    minimum: 0
                    type: integer
                  totalResources:
                    description: TotalResources is the total number of resources processed
                    format: int32
                    minimum: 0
                    type: integer
                required:
                - failedSyncs
                - lastSyncDuration
                - successfulSyncs
                - totalResources
                type: object
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
